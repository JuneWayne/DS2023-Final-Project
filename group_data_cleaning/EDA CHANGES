import matplotlib.pyplot as plt


# Calculate missing values
missing_vals = df.isnull().sum()
missing_vals = missing_vals[missing_vals > 0].sort_values(ascending=False)


# Plot
plt.figure(figsize=(14, 10))
missing_vals.plot(kind='barh', color='lightcoral', edgecolor='black')


# Titles and labels
plt.title('Missing Values Visaulized by Column', fontsize=20, )
plt.xlabel('Number of Missing Values', fontsize=12)
plt.ylabel('Variables', fontsize=12)
plt.xticks(fontsize=10)
plt.yticks(fontsize=10)


# Invert Y-axis to show largest bars at the top
plt.gca().invert_yaxis()


plt.tight_layout()
plt.show()


plt.figure(figsize=(12, 12))
plt.figure(figsize=(12, 8))
sns.boxplot(data=df.drop(columns=["record_id"]), orient="h")
plt.title("Boxplot of Numeric Columns")
plt.tight_layout()
plt.show()



#Include this ( MARKDOWN)

This map tells us some important information ( like we can see that within the similar testing/ strength assessment type- are highly correlated). For instance, controlled, limb symmtery and ACL strength have storng correlation depending on the type of testing (ch/sh/th). With that being said, we could consider putting these variables into distinict variable groups so we could make generlaizaiton visulizaitons with them. - Maybe like this: group_data =


    1. 'ACL Strength': data[['acl_sh', 'acl_th', 'acl_ch', 'acl_ext_mvic_90', 'acl_ext_mvic_60', 'acl_flex_mvic_60', 'acl_ext_isok_60', 'acl_flex_isok_60']],


    2. 'Control Strength': data[['con_sh', 'con_th', 'con_ch', 'con_ext_mvic_90', 'con_ext_mvic_60', 'con_flex_mvic_60', 'con_ext_isok_60', 'con_flex_isok_60']],


    3. 'Limb Symmetry': data[['sh_lsi', 'th_lsi', 'ch_lsi', 'lsi_ext_mvic_90', 'lsi_ext_mvic_60', 'lsi_flex_mvic_60', 'lsi_ext_isok_60', 'lsi_flex_isok_60']]

# PUT THIS BEFORE WE IMPUTED THE MISSING VALUES

print(df['age_group_dashboard_use'].value_counts())
print(' ')
print(df['graft_dashboard2'].value_counts())

We understood that there’s a lot of missing values and NaN on the age_group_dashboard_use, so let’s isolate the age group with the most data and just the Graft Types that don’t have (Not reported)


plt.figure(figsize=(10, 6))
filtered_df = df[df['age_group_dashboard_use'] != 'Not Reported']
sns.countplot(data=filtered_df, y='age_group_dashboard_use', hue='graft_dashboard2', palette='Set2')
plt.title("Graft Type Distribution by Age Group (Excluding 'Not Reported')", fontsize=14)
plt.xlabel("Count")
plt.ylabel("Age Group")
plt.legend(title='Graft Type', bbox_to_anchor=(1., 1))
plt.tight_layout()
plt.show()

# distrubtion of grafttype by sex
plt.figure(figsize=(12, 6))
sns.countplot(data=df, x='age_group_dashboard_use', hue='visit_sex', palette='Set2')
plt.title("Distribution of Age by Sex", fontsize= 20)
ax= plt.gca()
ax.spines['top'].set_visible(False)
ax.spines['right'].set_visible(False)
ax.spines['left'].set_visible(False)
ax.spines['bottom'].set_visible(False)
plt.show()
